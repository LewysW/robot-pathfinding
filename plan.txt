Task 1:

1. Change boolean for buttons in PotentialFields.java to enum so that one in three buttons can be enabled at a time. [DONE]

2. Look at move() (euclidean distance) and arcMove() (arc) functions. Write equivalent fracProgrMove() function [Done]

3.. Within fracProgMove() function, need to call evaluateSamplePointsFracProg() similar to evaluateSamplePointsArc() for Arc and evaluateSamplePoints() for Euclidean. [DONE]

4. Within evaluateSamplePointsFracProg() function need to call evalMoveFracProg() function, similar to evalMoveArc() for Arc (from evaluateSamplePointsArc()) and evalMove() for Euclidean (from evaluateSamplePoints()) [DONE]

SUMMARY OF FUNCTIONS REQUIRED (Moving down the call stack): fracProgMove() -> evaluateSamplePointsFracProg() -> evalMoveFracProg() [DONE]

Task 2

Implementing winding and unwinding.

1. Write function as part of evalMoveFracProg() that produces a score for a point based on its winding/unwinding


